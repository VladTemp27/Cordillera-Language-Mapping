services:
  db:
    image: postgres:17
    container_name: lang_map_db
    environment:
      POSTGRES_DB: lang_map
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d lang_map"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: lang_map_nginx
    environment:
      - APP_PORT=2020
      - SERVER_NAME=${SERVER_NAME:-localhost}
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_healthy
      app:
        condition: service_healthy
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: lang_map_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json:ro

  app:
    build:
      context: ./server/resource-server
      dockerfile: Dockerfile
    environment:
      - PORT=2020
    ports:
      - "2020:2020"
    volumes:
      - ./server/resource-server:/app
      - ./server/resource-server/node_modules:/app/node_modules
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:2020/health || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    networks:
      - app_network

  api:
    build:
      context: ./server/rest-api
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: postgres
      DB_NAME: lang_map
      PORT: 2019
    healthcheck:
      test: ["CMD", "npm", "test"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    ports:
      - "2019:2019"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./server/rest-api:/app
      - node_modules:/app/node_modules
    networks:
      - app_network


networks:
  app_network:
    driver: bridge
    
volumes:
  node_modules:
    driver: local
